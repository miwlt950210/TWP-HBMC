import os
import netCDF4 as nc
import numpy as np
from osgeo import gdal, osr, ogr
import glob
os.environ['PROJ_LIB'] = r''

def nc2tif(data, Output_folder,i):
    pre_data = nc.Dataset(data)  
    Lat_data = pre_data.variables['latitude'][:]
    Lon_data = pre_data.variables['longitude'][:]
    pre_arr= np.asarray(pre_data.variables['wind'])
    Lonmin, Latmax, Lonmax, Latmin = [Lon_data.min(), Lat_data.max(), Lon_data.max(), Lat_data.min()]
    # Lonmin, Latmax, Lonmax, Latmin

    Num_lat = len(Lat_data)
    Num_lon = len(Lon_data)
    Lat_res = (Latmax - Latmin) / (float(Num_lat) - 1)
    Lon_res = (Lonmax - Lonmin) / (float(Num_lon) - 1)
  
    driver = gdal.GetDriverByName('GTiff')
    out_tif_name = Output_folder + '\\' + data.split('\\')[-1].split('.')[0] + '_' + str(i + 1) + '.tif'
    out_tif = driver.Create(out_tif_name, Num_lon, Num_lat, 1, gdal.GDT_Float64)

    geotransform = (Lonmin, Lon_res, 0.0, Latmax, 0.0, -Lat_res)
    out_tif.SetGeoTransform(geotransform)

    prj = osr.SpatialReference()
    prj.ImportFromEPSG(4326)
    out_tif.SetProjection(prj.ExportToWkt())

    out_tif.GetRasterBand(1).WriteArray(pre_arr)  
    out_tif.FlushCache()  
    out_tif = None 


def main():
    Input_folder = r""
    Output_folder = r""
   
    if not os.path.exists(Output_folder):
        os.makedirs(Output_folder)

    data_list = glob.glob(os.path.join(Input_folder + '*.nc'))
    print(data_list)
    for i in range(len(data_list)):
        data = data_list[i]
        nc2tif(data, Output_folder,i)
        print(data + '2tifsuccess')


main()